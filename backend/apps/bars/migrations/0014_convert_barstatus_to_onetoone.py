# Generated by Django 5.1.7 on 2025-06-03 00:54

from django.db import migrations, models
import django.db.models.deletion


def deduplicate_bar_statuses(apps, schema_editor):
    """
    Keep only the latest status record for each bar, delete all others.
    """
    BarStatus = apps.get_model('bars', 'BarStatus')

    # Get all bar IDs that have statuses
    bar_ids = BarStatus.objects.values_list('bar_id', flat=True).distinct()

    for bar_id in bar_ids:
        # Get all statuses for this bar, ordered by last_updated
        statuses = list(BarStatus.objects.filter(bar_id=bar_id).order_by('-last_updated'))

        if len(statuses) > 1:
            # Keep the first one (most recent)
            keep, *rest = statuses

            # Delete the rest
            for status in rest:
                status.delete()

            print(f"Kept status {keep.pk} for bar {bar_id}, deleted {len(rest)} duplicates")


class Migration(migrations.Migration):

    dependencies = [
        ('bars', '0013_barcrowdsize_remove_barvote_unique_vote_per_bar_user_and_more'),
    ]

    operations = [
        # 1. First add the new fields
        migrations.AddField(
            model_name='barstatus',
            name='crowd_size_votes',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='barstatus',
            name='wait_time_votes',
            field=models.PositiveIntegerField(default=0),
        ),

        # 2. Then run the deduplication function
        migrations.RunPython(deduplicate_bar_statuses),

        # 3. Now it's safe to alter the field type to OneToOneField
        migrations.AlterField(
            model_name='barstatus',
            name='bar',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='status', to='bars.bar'),
        ),

        # 4. Add indexes
        migrations.AddIndex(
            model_name='barstatus',
            index=models.Index(fields=['bar'], name='bars_barsta_bar_id_c10fe5_idx'),
        ),
        migrations.AddIndex(
            model_name='barstatus',
            index=models.Index(fields=['last_updated'], name='bars_barsta_last_up_fc41e6_idx'),
        ),
    ]
