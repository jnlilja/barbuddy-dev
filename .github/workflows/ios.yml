name: iOS starter workflow

on:
  push:
    branches: [ "network-call-refactor" ] 
  pull_request:
    branches: [ "network-call-refactor" ]

jobs:
  build:
    name: BarBuddy iOS Build and Test
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Verify Xcode Version
        run: xcodebuild -version

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default

      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          device=$(xcrun xctrace list devices 2>&1 \
            | awk '
              BEGIN {
                # define regex as a string, escaping parentheses
                regex="(iPhone [^()]+) \\((iOS ([0-9]+)\\.[0-9]+)\\)"
              }
              /iPhone/ && /\(.*iOS [0-9]+\.[0-9]+\)/ {
                # match against our regex; m[3] is the major version number
                if (match($0, regex, m) && m[3] >= 18) {
                  print m[1]
                  exit
                }
              }
            ')

          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          file_to_build=$(ls -A | grep -i .xcworkspace || ls -A | grep -i .xcodeproj)
          xcodebuild build-for-testing -scheme "$scheme" -project "$file_to_build" -destination "platform=$platform,name=$device"

      - name: Test
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          device=$(xcrun xctrace list devices 2>&1 \
            | awk '
              BEGIN {
                regex="(iPhone [^()]+) \\((iOS ([0-9]+)\\.[0-9]+)\\)"
              }
              /iPhone/ && /\(.*iOS [0-9]+\.[0-9]+\)/ {
                if (match($0, regex, m) && m[3] >= 18) {
                  print m[1]
                  exit
                }
              }
            ')

          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then 
            filetype_parameter="workspace"
            file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
          else 
            filetype_parameter="project"
            file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
