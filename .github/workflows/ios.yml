name: iOS Starter Workflow

on:
  push:
    branches: [ "network-call-refactor" ]
  pull_request:
    branches: [ "network-call-refactor" ]

jobs:
  build-and-test:
    name: BarBuddy iOS Build and Test
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Determine Default Scheme
        id: scheme
        run: |
          echo "::set-output name=SCHEME::$(xcodebuild -list -json \
            | ruby -r json -e 'puts JSON.parse(STDIN.read)[\"project\"][\"schemes\"][0]')"

      - name: Pick iPhone Simulator
        id: device
        run: |
          # pick the first iPhone simulator available
          NAME=$(xcrun simctl list devices available \
            | grep -oE 'iPhone [0-9]+' \
            | head -n1)
          echo "::set-output name=DEVICE::${NAME}"

      - name: Build for Testing
        run: |
          # always prefer workspace if present
          TARGET=$(ls *.xcworkspace 2>/dev/null || ls *.xcodeproj)
          xcodebuild build-for-testing \
            -scheme "${{ steps.scheme.outputs.SCHEME }}" \
            -workspace "$TARGET" \
            -destination "platform=iOS Simulator,name=${{ steps.device.outputs.DEVICE }}"

      - name: Run Tests
        run: |
          TARGET=$(ls *.xcworkspace 2>/dev/null || ls *.xcodeproj)
          xcodebuild test-without-building \
            -scheme "${{ steps.scheme.outputs.SCHEME }}" \
            -workspace "$TARGET" \
            -destination "platform=iOS Simulator,name=${{ steps.device.outputs.DEVICE }}"
